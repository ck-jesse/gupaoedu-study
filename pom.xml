<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>com.coy.gupaoedu.study</groupId>
    <artifactId>gupaoedu-study</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <description>咕泡学院-做技术人的指路明灯，职场生涯的精神导师</description>

    <modules>
        <module>study-pattern</module>
        <module>study-spring</module>
        <module>study-mybatis</module>
        <module>study-mebatis</module>
        <module>study-juc</module>
        <module>study-netty</module>
        <module>study-jvm</module>
        <module>study-tomcat</module>
        <module>study-data-structure</module>
        <module>study-rpc</module>
        <module>study-serialization</module>
        <module>study-io</module>
        <module>study-zookeeper</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <jmockit.version>1.36</jmockit.version>
        <fastjson-version>1.2.4</fastjson-version>
        <cglib.version>3.2.5</cglib.version>
        <lombok.version>1.16.10</lombok.version>
        <slf4j.version>1.7.25</slf4j.version>
        <mybatis.version>3.4.6</mybatis.version>
        <mysql.version>8.0.13</mysql.version>
        <servlet.api.version>2.4</servlet.api.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Spring IO Platform项目的本质就是一个pom文件，它记录了Spring项目和其它第三方库对应的版本信息。 -->
            <!-- 在构建项目时，经常会使用到第三方库，一般大家都是根据经验或直接选择较新的版本，随意性较大。
                 随着业务复杂度的增加，集成的第三方库会越来越多，依赖关系也会越来越复杂。
                 除非做过完整的测试，保证集成第三方库的版本不会出问题，且后续集成或升级都不会出问题，否则就有可能存在较大的隐性风险（版本冲突）。
                 Spring IO Platform就能很好地帮助我们解决这些问题。
                 开发人员在添加第三方库时，不需要关心版本号，Spring IO Platform会帮助我们提供一个最优的版本，而且该版本是经过严格测试的，可以更好地兼容其它的组件。
                 同时，你也可以根据自己的需要来升级或降级依赖版本。
             -->
            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>Cairo-SR7</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson-version}</version>
            </dependency>

            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${servlet.api.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!--<plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>-->

            <!-- 编译打包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!--<encoding>${project.build.sourceEncoding}</encoding>-->
                </configuration>
            </plugin>

            <!-- 该插件的作用是用于复制指定的文件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>

            <!-- 打包时跳过测试 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.1</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

        </plugins>
    </build>


</project>