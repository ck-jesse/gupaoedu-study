/*
 * This file is automatically generated by MyBatis Generator
 */
package ${packageName}.dao.entity;

import lombok.Data;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

/**
 * ${functionName} ${tableName}
 *
 * @author ${author}
 * @gen ${datetime}
 */
@Data
public class ${ClassName} implements Serializable {

    private static final long serialVersionUID = 1L;

        #foreach ($column in $columns)
        #if(!$table.isSuperColumn($column.javaField))
        /** $column.columnComment */
        #if($column.list)
        #set($parentheseIndex=$column.columnComment.indexOf("（"))
        #if($parentheseIndex != -1)
        #set($comment=$column.columnComment.substring(0, $parentheseIndex))
        #else
        #set($comment=$column.columnComment)
        #end
        #if($parentheseIndex != -1)
@Excel(name = "${comment}", readConverterExp = "$column.readConverterExp()")
#elseif($column.javaType == 'Date')
@Excel(name = "${comment}", width = 30, dateFormat = "yyyy-MM-dd")
#else
@Excel(name = "${comment}")
#end
        #end
private $column.javaType $column.javaField;

    /**
     * 主键ID
     */
    private Long id;

    /**
     * 退款来源类型 all 批量整单退；part 批量部分退
     */
    private String refundSourceType;

    /**
     * 退款规则 order订单维度退款；order_quantity订单购买数量维度退款
     */
    private String refundRule;

    /**
     * 退款规则类型 1元；2百分比
     */
    private Integer refundRuleType;

    /**
     * 退款规则值 退款金额或退款比例
     */
    private BigDecimal refundRuleValue;

    /**
     * 退款佣金扣除类型 1按比例扣除；2不扣除
     */
    private Integer refundCommissionDeductType;

    /**
     * 退款原因
     */
    private String refundReason;

    /**
     * 状态 1处理中；2待审核；3审核通过；4审核拒绝；5已完成
     */
    private Integer status;

    /**
     * 审核人
     */
    private String auditBy;

    /**
     * 审核时间
     */
    private Date auditTime;

    /**
     * 审核原因
     */
    private String auditReason;

    /**
     * 订单总数
     */
    private Integer refundOrderTotal;

    /**
     * 可退订单数量
     */
    private Integer refundOrderCount;

    /**
     * 不可退订单数量
     */
    private Integer nonRefundOrderCount;

    /**
     * 退款成功订单数
     */
    private Integer refundOrderSuccNum;

    /**
     * 退款失败订单数
     */
    private Integer refundOrderFailNum;

    /**
     * 删除标识（1存在，2删除）
     */
    private Integer delFlag;

    /**
     * 创建人
     */
    private String createBy;

    /**
     * 创建时间
     */
    private Date createTime;

    /**
     * 修改时间
     */
    private Date updateTime;

    /**
     * 备注
     */
    private String remark;

    /**
     * 开始创建时间
     */
    private Date startCreateTime;

    /**
     * 结束创建时间
     */
    private Date endCreateTime;


    /**
     * @mbg.generated 2020-03-30 20:18:14
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", refundSourceType=").append(refundSourceType);
        sb.append(", refundRule=").append(refundRule);
        sb.append(", refundRuleType=").append(refundRuleType);
        sb.append(", refundRuleValue=").append(refundRuleValue);
        sb.append(", refundCommissionDeductType=").append(refundCommissionDeductType);
        sb.append(", refundReason=").append(refundReason);
        sb.append(", status=").append(status);
        sb.append(", auditBy=").append(auditBy);
        sb.append(", auditTime=").append(auditTime);
        sb.append(", auditReason=").append(auditReason);
        sb.append(", refundOrderTotal=").append(refundOrderTotal);
        sb.append(", refundOrderCount=").append(refundOrderCount);
        sb.append(", nonRefundOrderCount=").append(nonRefundOrderCount);
        sb.append(", refundOrderSuccNum=").append(refundOrderSuccNum);
        sb.append(", refundOrderFailNum=").append(refundOrderFailNum);
        sb.append(", delFlag=").append(delFlag);
        sb.append(", createBy=").append(createBy);
        sb.append(", createTime=").append(createTime);
        sb.append(", updateTime=").append(updateTime);
        sb.append(", remark=").append(remark);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }

    public void dealNullField() {
        if (null == id) {
            id = 0L;
        }
        if (null == refundSourceType) {
            refundSourceType = "";
        }
        if (null == refundRule) {
            refundRule = "";
        }
        if (null == refundRuleType) {
            refundRuleType = 0;
        }
        if (null == refundRuleValue) {
            refundRuleValue = BigDecimal.ZERO;
        }
        if (null == refundCommissionDeductType) {
            refundCommissionDeductType = 0;
        }
        if (null == refundReason) {
            refundReason = "";
        }
        if (null == status) {
            status = 0;
        }
        if (null == auditBy) {
            auditBy = "";
        }
        if (null == auditReason) {
            auditReason = "";
        }
        if (null == refundOrderTotal) {
            refundOrderTotal = 0;
        }
        if (null == refundOrderCount) {
            refundOrderCount = 0;
        }
        if (null == nonRefundOrderCount) {
            nonRefundOrderCount = 0;
        }
        if (null == refundOrderSuccNum) {
            refundOrderSuccNum = 0;
        }
        if (null == refundOrderFailNum) {
            refundOrderFailNum = 0;
        }
        if (null == delFlag) {
            delFlag = 0;
        }
        if (null == createBy) {
            createBy = "";
        }
        if (null == remark) {
            remark = "";
        }
    }
}