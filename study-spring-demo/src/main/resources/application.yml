server:
  port: 8081
  #servlet:
  #  context-path: /study-spring-demo

logging:
  level:
    root: info
    # 日志级别指定到包或类
    com.coy.gupaoedu.study.spring: debug

spring:
  application:
    name: study-spring-demo
  profiles:
    # 注意: spring.profiles.active 配置在该配置文件中可能不生效，可在启动的环境变量中增加 spring.profiles.active=dev
    active: test
  # spring boot redis配置
  redis:
    timeout: 3000
    host: 127.0.0.1
    port: 6379
    password:
  # 缓存
  cache:
    # 一级缓存
    #type: caffeine
    #caffeine:
    #  spec: initialCapacity=10,maximumSize=200,expireAfterWrite=5s
    # 多级缓存
    multi:
      # 缓存实例Id，唯一标识应分布式场景下的一个缓存实例节点
      #instanceId: a1
      # 启用refreshAfterWrite，用于加载定义CustomCacheLoader或Expiry
      #enableRefreshAfterWrite: true
      # 一级缓存
      caffeine:
        # 高并发场景下建议使用refreshAfterWrite，在缓存过期后不会被回收，再次访问时会去刷新缓存，在新值没有加载完毕前，其他的线程访问始终返回旧值
        # Caffeine在缓存过期时默认只有一个线程去加载数据，配置了refreshAfterWrite后当大量请求过来时，可以确保其他用户快速获取响应。
        defaultSpec: initialCapacity=10,maximumSize=200,refreshAfterWrite=30s
        # 如果expireAfterWrite和expireAfterAccess同时存在，以expireAfterWrite为准。
        # defaultSpec: initialCapacity=10,maximumSize=200,expireAfterWrite=30s,refreshAfterWrite=30s
        specs:
          userCache: initialCapacity=10,maximumSize=200,expireAfterWrite=30s
          userCacheSync: initialCapacity=10,maximumSize=200,refreshAfterWrite=30s
      # 二级缓存
      redis:
        topic: 1000

